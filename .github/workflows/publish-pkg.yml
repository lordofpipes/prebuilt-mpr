# Update an MPR package.
name: Update Package
on:
  workflow_dispatch:
    inputs:
      # A JSON array. The array items are objects containing these keys:
      # - 'arch'
      # - 'distro'
      # - 'image-tag'
      targets:
        required: true
        type: string

jobs:
  update-pkg:
    name: Build Package (${{ matrix.target.distro }}/${{ matrix.target.arch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(inputs.targets) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build package
        run: echo "${SCRIPT}" | docker run -i proget.hunterwittenborn.com/docker/makedeb/makedeb:${{ matrix.target.image-tag }} bash
        env:
          SCRIPT: |
            set -x
            sleep 5000
  update-status:
    name: Update Status
    runs-on: ubuntu-latest
    needs: update-pkg
    if: failure() || cancelled()
    steps:
      - name: Get issue number
        id: issue
        run: |
          pkg="$(echo "${{ github.ref_name }}" | sed 's|^pkg-update/||')"
          gh issue list | grep "\`${pkg}\`" | awk '{print $0}' | echo "NUMBER=$(cat)" >> "${GITHUB_OUTPUT}"
      - name: Set status notification
        run: |
          if [[ "${{ needs.update-pkg.result }}" == 'failure' ]]; then
            msg='Failed'
          elif [[ "${{ needs.update-pkg.result }}" == 'cancelled' ]]; then
            msg='Cancelled'
          else
            echo 'Unknown result type: ${{ needs.update-pkg.result }}' 1>&2
            exit 1
          fi
          body="$(gh issue view '${{ steps.issue.outputs.NUMBER }}' | sed "s|.*Building...|:x: ${msg}|")"
          gh issue edit "${{ steps.issue.outputs.NUMBER }}" -b "${body}"


      # - name: Install prerequisites
      #   run: sudo apt install git locales-all -y
      # - name: Correct permissions so makedeb can run
      #   run: chown 'makedeb:makedeb' ./ "${HOME}" -R
      # - name: Run makedeb
      #   run: sudo -Eu makedeb makedeb -s --no-confirm --pass-env
      #   env:
      #     DEBIAN_FRONTEND: "${{ vars.DEBIAN_FRONTEND }}"
      #     # Needed to extract some tar archives.
      #     LANG: "en_US.UTF-8"
      # - name: Upload build artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ matrix.distro-image }}
      #     path: '*.deb'
